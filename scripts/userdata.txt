<powershell>
Set-ExecutionPolicy -ExecutionPolicy RemoteSigned -Force -ErrorAction SilentlyContinue

$instanceId = (New-Object System.Net.WebClient).DownloadString("http://169.254.169.254/latest/meta-data/instance-id")

$newTag = New-Object Amazon.EC2.Model.Tag
$newTag.Key = "drift-status"
$newTag.Value = "provisioning"
New-EC2Tag -Resource $instanceId -Tag $newTag

$rootfolder = "c:\"
$finalfolder= $rootfolder+'drift-serverdaemon'
$downloadfolder = $rootfolder+'temp'

Write-Output '*** Creating folders'
New-Item -itemtype directory -Force -Path $downloadfolder 

Write-Output '*** Fetching latest drift-serverdaemon'
$filename = "drift-serverdaemon-latest.zip"
Read-S3Object -BucketName directive-tiers.dg-api.com -Key ("ue4-builds/"+$filename) -File ($downloadfolder+"\"+$filename) -Region eu-west-1

Write-Output '*** Unpacking drift-serverdaemon into '$rootfolder

$shell = new-object -com shell.application
$zip = $shell.NameSpace($downloadfolder+"\"+$filename)
foreach($item in $zip.items())
{
    $shell.Namespace($rootfolder).copyhere($item)
}

$foldername = Get-ChildItem C:\ | Where-Object {$_.PSIsContainer -eq $true -and $_.Name -match "drift-serverdaemon-"}
Write-Output '*** Renaming'$foldername' to '$finalfolder
Rename-Item $rootfolder$foldername $finalfolder

$newTag = New-Object Amazon.EC2.Model.Tag
$newTag.Key = "drift-status"
$newTag.Value = "install_prerequisites"
New-EC2Tag -Resource $instanceId -Tag $newTag

Write-Output '*** Executing install_redist'
Invoke-Expression -Command $finalfolder'\scripts\install_redist.ps1 -domainUrl %domain_url%'

$newTag = New-Object Amazon.EC2.Model.Tag
$newTag.Key = "drift-status"
$newTag.Value = "finish_install"
New-EC2Tag -Resource $instanceId -Tag $newTag

Write-Output '*** Registering basic tasks'
Invoke-Expression -Command $finalfolder'\scripts\register_basic_tasks.ps1 -domainUrl %domain_url%'

# Write-Output '*** Restarting Splunk Forwarder'
# Restart-Service SplunkForwarder

$newTag = New-Object Amazon.EC2.Model.Tag
$newTag.Key = "drift-status"
$newTag.Value = "ready"
New-EC2Tag -Resource $instanceId -Tag $newTag

Write-Output '*** All Done'
</powershell>